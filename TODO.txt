TODO List
=========

Fix not found errors in nginx logs
----------------------------------

In nginx logs we get:

2014/05/05 10:02:02 [error] 29064#0: *80 open() "/home/ec2-user/public_html/404.html" failed (2: No such file or directory), client: 124.122.140.15, server: localhost, request: "GET /myadmin/scripts/setup.php HTTP/1.1", host: "130.56.248.113"

This is becasue in nginx/conf.d/default.conf we have:

  # redirect server error pages to the static page /40x.html
  error_page  404  /404.html;
  location = /40x.html {
  }
  
  # redirect server error pages to the static page /50x.html
  error_page  500 502 503 504  /50x.html;
  location = /50x.html {
  }


User Requests
-------------

Emily Bird in email dated 20.01.2014 asked:

1) Order of the output. Can we please have the following order:
   - B Matrix
   - Lambda Matrix
   - C Matrix
   - C Inverse
   - Correlation Matrix

DONE

2) Remove the time/date from output (but it looks like this request is out of
   date - the time/date doesn't appear in the output anymore, does it?)

DONE

3) Remove the output "Your input seems fine". 

DONE

4) When "Main effects + all two-factor interactions" or "Main effects + some
   two-factor interactions" is selected but no determinant is entered, display
   "None" under the heading "Determinant of C Entered" (at the moment it is just
   blank).


Implementing a Timeout
----------------------

Refs:
http://stackoverflow.com/questions/1191374/subprocess-with-timeout
http://stackoverflow.com/questions/3733270/python-subprocess-timeout
http://howto.pui.ch/post/37471155682/set-timeout-for-a-shell-command-in-python

See 
  p = process.ProcessOpen("notepad.exe")
  p.wait(timeout=5)


subprocess.call(): 

See pydoc subprocess for "call" details. 
This returns 0 if all is OK.
To capture standard error in the result use stderr=STDOUT.
The exception object will have one extra attribute called
'child_traceback', which is a string containing traceback information
from the childs point of view.
See also "check_call"

(['./process_choices.py', 'construct', 'main'], stderr=subprocess.STDOUT)
return_value = subprocess.call(['./process_choices.py', tempdir, 'construct', 'main'] )



